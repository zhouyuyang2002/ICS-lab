正常情况下这个 bomb 只能在助教给的 Host Machine 环境上跑，炸一次都扣分。

观察 bomb.c, 其在开头运行了 initialize_bomb 判断环境是否合法后，之后就进入了拆弹环节。经 gdb 检验确实在这个函数里炸了。

通过单步检查，发现函数炸掉的部分有两处会因为条件跳转语句挂掉。具体的位置分别是 0x1b8c 和 0x1b9a。

安装 Vscode + Hexeditor 插件，可以实现二进制文件的按位编辑。

原先的两个位置分别为 74(je) 和 78(js)，分别改成 75(jne) 和 79(jns) 就可以实现本机正常运行了。可以实现简单的拆弹。


此时运行的时候如果拆弹成功， phase_defuse 会尝试上传成绩。解决方案共两种，分别如下：

1. 找到上传数据的代码，类似于之前的操作改条件跳转指令。

2. 修改调用的程序。原先调用的是 call phase_defuse，我们可以将其改成 call read_line，
因为 call 的第二个参数存的 call 目标的位置 - call 下一个指令的位置，调用计算器即可求出修改的目标结果。
这种方法无法触发 secret_phase，因为其调用源在 phase_defuse 内。

此时就可以断网依次拆 bomb，最后在 Host 输入最终答案即可。